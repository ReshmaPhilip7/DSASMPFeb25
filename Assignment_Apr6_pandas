import pandas as pd
import numpy as np

df = pd.read_csv(r"C:/Users/ACER/Downloads/auto-mpg.csv")
print(df)
print(df.head(10))
print(df.shape)
print(df.describe())
df1 = df[(df["model year"] == 75) & (df["weight"] < 3000)]
print(df1[["car name", "weight", "mpg"]])

df2 = df[df["horsepower"] == "?"]
print(df2)
missing_values = df.isnull().sum()
print(missing_values)
question_mark = (df == "?").any()
print(question_mark)
df.replace("?", 0, inplace=True)
print(df)
median_horsepower = df["horsepower"].median()
print(median_horsepower)
df.replace(0, median_horsepower, inplace=True)
print(df)
missing_values = df.isnull().sum()
print(missing_values)
df["horsepower"] = df["horsepower"].astype(int)
df["weight"] = df["weight"].astype(int)
df["power_to_weight_ratio"] = df["horsepower"] / df["weight"]
print(df)

df_sorted_origin_mpg_mean = df.groupby("origin")["mpg"].mean()
print(df_sorted_origin_mpg_mean)

df_car_names = df.sort_values(by="mpg", ascending=False).head(10)
print(df_car_names[["car name", "mpg"]])


def performance_score(row):
    return row["mpg"] * row["acceleration"] / row["weight"]


df["performance_score"] = df.apply(performance_score, axis=1)
print(df)

summary_df = df.groupby("model year")[["mpg", "weight", "horsepower"]].mean()
print(summary_df)

df3 = df[df["mpg"] > 30][["mpg", "cylinders", "horsepower", "weight"]]
print(df3)
df3.to_csv("high_mpg_cars.csv", index=False)

Q1 = df["mpg"].quantile(0.25)
Q3 = df["mpg"].quantile(0.75)
IQR = Q3 - Q1
lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR
print(lower_bound)
print(upper_bound)
print(IQR)

outliers = df[(df["mpg"] < lower_bound) & (df["mpg"] > upper_bound)][
    ["car name", "mpg", "model year"]
]
print(outliers)
